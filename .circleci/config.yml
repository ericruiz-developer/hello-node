# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: node:8.0.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: /app

    steps:
      - checkout
      - run:
          name: Install gcloud sdk
          command: export CLOUDSDK_CORE_DISABLE_PROMPTS=1 && \
                   curl https://sdk.cloud.google.com | bash && \
                   ~/google-cloud-sdk/bin/gcloud version && \
                   ~/google-cloud-sdk/bin/gcloud --quiet components update
      - run:
          name: Update kubectl
          command: ~/google-cloud-sdk/bin/gcloud --quiet components update kubectl
      - run:
          name: Decode Google Cloud Credentials
          command: echo ${GOOGLE_AUTH} | base64 --decode -i > ${HOME}/gcp-key.json
      - run:
          name: Set gcp service account
          command: ~/google-cloud-sdk/bin/gcloud --quiet auth activate-service-account --key-file ${HOME}/gcp-key.json
      - run:
          name: Set project to use in gcp
          command: ~/google-cloud-sdk/bin/gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Set Cluster
          command: ~/google-cloud-sdk/bin/gcloud --quiet config set container/cluster ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Set zone
          command: ~/google-cloud-sdk/bin/gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: Set env USE_APPLICATION_DEFAULT_CREDENTIALS
          command: ~/google-cloud-sdk/bin/gcloud --quiet config set container/use_application_default_credentials true
      - run:
          name: Set env USE_CLIENT_CERTIFICATE
          command: ~/google-cloud-sdk/bin/gcloud --quiet config set container/use_client_certificate true
      - run:
          name: Get cluster credentials
          command: ~/google-cloud-sdk/bin/gcloud container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

#      - run:
#          name: chmod deploy.sh
#          command: chmod 755 ./deploy.sh
#      - deploy:
#              name: Deploy Master to GKE
#              command: |
#                ./deploy.sh

      # Download and cache dependencies
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
#      - run: npm install
#
#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test
